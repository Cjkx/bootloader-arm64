/dts-v1/;

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	compatible = "linux,dummy-virt";
	#size-cells = <0x2>;
	#address-cells = <0x2>;
	interrupt-parent = <&gic>;

	memory {
		reg = <0x00 0x00000000 0x0 0x10000000>;
		device_type = "memory";
	};

	gic: interrupt-controller {
		compatible = "arm,cortex-a15-gic";
		ranges;
		#size-cells = <0x2>;
		#address-cells = <0x2>;
		interrupt-controller;
		#interrupt-cells = <0x3>;
		reg = <0x70 0x31001000 0x0 0x1000>,
		      <0x70 0x31002000 0x0 0x2000>;
	};

	psci {
		migrate = <0xc4000005>;
		cpu_on = <0xc4000003>;
		cpu_off = <0x84000002>;
		cpu_suspend = <0xc4000001>;
		sys_poweroff = <0x84000008>;
		sys_reset = <0x84000009>;
		method = "smc";
		compatible = "arm,psci-0.2", "arm,psci";
	};

	cpus {
		#size-cells = <0x0>;
		#address-cells = <0x1>;
		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
				core1 {
					cpu = <&cpu1>;
				};
				core2 {
					cpu = <&cpu2>;
				};
				core3 {
					cpu = <&cpu3>;
				};
		    };
			cluster1 {
				core0 {
					cpu = <&cpu4>;
				};
				core1 {
					cpu = <&cpu5>;
				};
				core2 {
					cpu = <&cpu6>;
				};
				core3 {
					cpu = <&cpu7>;
				};
			};
		};

		cpu0: cpu@0 {
			reg = <0x0>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu1: cpu@1 {
			reg = <0x1>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu2: cpu@2 {
			reg = <0x2>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu3: cpu@3 {
			reg = <0x3>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu4: cpu@100 {
			reg = <0x100>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu5: cpu@101 {
			reg = <0x101>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu6: cpu@102 {
			reg = <0x102>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};

		cpu7: cpu@103 {
			reg = <0x103>;
			enable-method = "psci";
			compatible = "arm,cortex-a53";
			device_type = "cpu";
		};
	};

	timer {
		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_LOW)>,
			<GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_LOW)>,
			<GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_LOW)>,
			<GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_LOW)>;
		always-on;
		compatible = "arm,armv8-timer";
	};

	apb_pclk {
		phandle = <0x8000>;
		clock-output-names = "clk24mhz";
		clock-frequency = <0x16e3600>;
		#clock-cells = <0x0>;
		compatible = "fixed-clock";
	};

	rst: reset-controller {
		compatible = "bitmain,bm-reset";
		reg = <0x70 0x30013000 0x0 0xc>;
		#reset-cells = <1>;
	 };

	gpio: gpio@7030009000 {
		compatible = "snps,dw-apb-gpio";
		reg = <0x70 0x30009000 0x0 0x1000>;
		#address-cells = <1>;
		#size-cells = <0>;

		port0a: gpio-controller@0 {
			compatible = "snps,dw-apb-gpio-port";
			bank-name = "port0a";
			gpio-controller;
			#gpio-cells = <2>;
			snps,nr-gpios = <32>;
			reg = <0>;
			interrupt-controller;
			interrupts = <GIC_SPI 64 IRQ_TYPE_LEVEL_HIGH>;
		};
	};

	gpio1: gpio@703000a000 {
		compatible = "snps,dw-apb-gpio";
		reg = <0x70 0x3000a000 0x0 0x1000>;
		#address-cells = <1>;
		#size-cells = <0>;

		port1a: gpio-controller@1 {
			compatible = "snps,dw-apb-gpio-port";
			bank-name = "port1a";
			gpio-controller;
			#gpio-cells = <2>;
			snps,nr-gpios = <32>;
			reg = <0>;
			interrupt-controller;
			interrupts = <GIC_SPI 65 IRQ_TYPE_LEVEL_HIGH>;
		};
	};

	gpio2: gpio@703000b000 {
		compatible = "snps,dw-apb-gpio";
		reg = <0x70 0x3000b000 0x0 0x1000>;
		#address-cells = <1>;
		#size-cells = <0>;

		port2a: gpio-controller@2 {
			compatible = "snps,dw-apb-gpio-port";
			bank-name = "port2a";
			gpio-controller;
			#gpio-cells = <2>;
			snps,nr-gpios = <32>;
			reg = <0>;
			interrupt-controller;
			interrupts = <GIC_SPI 66 IRQ_TYPE_LEVEL_HIGH>;
		};
	};

	i2c0: i2c@7030005000 {
		compatible = "snps,designware-i2c";
		reg = <0x70 0x30005000 0x0 0x1000>;
		bus-clocks = <100000000>;
		clock-frequency = <100000>;
	};

	i2c1: i2c@7030006000 {
		compatible = "snps,designware-i2c";
		reg = <0x70 0x30006000 0x0 0x1000>;
		bus-clocks = <100000000>;
		clock-frequency = <100000>;

		#address-cells = <1>;
		#size-cells = <0>;

		bm16xxeeprom@6a {
			compatible = "bitmain,bm16xx-eeprom";
			reg = <0x6a>;

			#address-cells = <1>;
			#size-cells = <1>;
			sn: sn@0000 {
				reg = <0x0000 17>;
			};

			mac0: mac0@0020 {
				reg = <0x0020 6>;
			};

			mac1: mac1@0040 {
				reg = <0x0040 6>;
			};
		};

		bm16xxmcu@17 {
			compatible = "bitmain,bm16xx-mcu";
			reg = <0x17>;

			nvmem-cells = <&sn>, <&mac0>, <&mac1>;
			nvmem-cell-names = "sn", "mac0", "mac1";
		};

		bm16xxwdt@69 {
			compatible = "bitmain,bm16xx-wdt";
			reg = <0x69>;
		};
	};

	i2c2: i2c@7030007000 {
		compatible = "snps,designware-i2c";
		reg = <0x70 0x30007000 0x0 0x1000>;
		bus-clocks = <100000000>;
		clock-frequency = <100000>;
	};

	uart1: serial1@7040001000 {
		compatible = "snps,dw-apb-uart";
		reg = <0x70 0x40001000 0x0 0x1000>;
		clock-frequency = <1843200>;
		interrupts = <GIC_SPI 81 IRQ_TYPE_LEVEL_HIGH>;
		reg-shift = <2>;
		reg-io-width = <4>;
	};

	aliases {
		serial1 = &uart1;
	};

	chosen {
		stdout-path = "serial1"; // "serial0:115200n8", no arguments means no re-initialization
	};

	pcie0: pcie0@60000000{
		compatible = "sophgo,mango-cdns-pcie";
		device_type = "pci";
		#address-cells = <3>;
		#size-cells = <2>;
		bus-range = <0x0 0x1f>;  // For this example, config space is just sized for 32 buses.

		// This is a 64 bit system, so two cells each for cpu address & size
		// CPU_PHYSICAL(2)  SIZE(2)
		reg = <0x20 (0x00000000) 0x0 0x2000000>, /*Config space */
		      <0x0 (0x60000000) 0x0 0x1000000>;  /*pcie base */
		reg-names = "cfg", "reg_base";

		linux,pci-domain = <0>;
		/// BUS_ADDRESS(3)  CPU_PHYSICAL(2)  SIZE(2)
		ranges =
			< 0x02000000 0x20 (0x02000000) 0x20 (0x02000000) 0x0 0x1000000 >, // MEM
			< 0x01000000 0x20 (0x03000000) 0x20 (0x03000000) 0x0 0x10000 >;   // IO

		/* DMA ranges */
		dma-ranges =
			/* 128MiB at 0x00000000-0x07ffffff */
			<0x02000000 0x0 0x00000000 0x0 0x00000000 0x0 0x08000000>,
			/* 64MiB at 0x00000000-0x03ffffff */
			<0x02000000 0x0 0x00000000 0x0 0x00000000 0x0 0x04000000>,
			/* 64MiB at 0x00000000-0x03ffffff */
			<0x02000000 0x0 0x00000000 0x0 0x00000000 0x0 0x04000000>;

		#interrupt-cells = <0x1>;

		// PCI_DEVICE(3)  INT#(1)  CONTROLLER(PHANDLE)  CONTROLLER_DATA(5)
		//interrupt-map = <  0x0 0x0 0x0  0x1  &gic  0x0 0x0 0x0 12 0x1
		//              0x0 0x0 0x0  0x2  &gic  0x0  0x0 0x0   13 0x1
		//              0x0 0x0 0x0  0x3  &gic  0x0  0x0 0x0   14 0x1
		//              0x0 0x0 0x0  0x4  &gic  0x0  0x0 0x0   15 0x1 >;

		//msi-parent = <&its_pci>;
		// PCI_DEVICE(3)  INT#(1)
		interrupt-map-mask = <0x0000 0x0 0x0  0x7>;
	};

	emmc: sdhc@704002A000 {
		compatible = "bitmain,synopsys-sdhc";
		bus-width = <4>;
		reg = <0x70 0x4002A000 0x0 0x1000>;
		max-frequency = <50000000>;
		mmc_init_freq = <200000>;
		mmc_trans_freq = <12500000>;
		64_addressing;
		index = <0x0>;
		status = "okay";
	};

	sd: sdhc@704002B000 {
		compatible = "bitmain,synopsys-sdhc";
		bus-width = <4>;
		reg = <0x70 0x4002B000 0x0 0x1000>;
		max-frequency = <50000000>;
		mmc_init_freq = <200000>;
		mmc_trans_freq = <12000000>;
		64_addressing;
		index = <0x1>;
		status = "okay";
	};

	spif1: spi@7002180000 {
		compatible = "bitmain,spif";
		reg = <0x70 0x02180000 0x0 0x1000>;
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;

		spi_flash: spiflash@1 {
			compatible = "spi-flash";
			spi-max-frequency = <20000000>;
			reg = <0>;
		};
	};

	pinctrl@0x7030011000 {
		compatible = "sophgo,mango-pinctrl";
		reg = <0x70 0x30011000 0x0 0x1000>;
		u-boot,dm-pre-reloc;
	};

	rtc:rtc@7030002000 {
		compatible = "sophgo,mango-rtc";
		reg = <0x70 0x30002000 0x0 0x1000>;
		rtc-counter = <0>;
	};
};
